rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check for admin claims
    function isAdmin() {
      return request.auth.token.admin == true;
    }

    match /analyses/{analysisId} {
      allow read, write: if (request.auth != null && request.auth.uid == resource.data.userId) || isAdmin();
      allow create: if request.auth != null && request.resource.data.userId == request.auth.uid;

      // Rule for the topics sub-collection
      match /topics/{topicId} {
        allow read, write: if (request.auth != null && get(/databases/$(database)/documents/analyses/$(analysisId)).data.userId == request.auth.uid) || isAdmin();

        // ** THIS IS THE NEW RULE THAT FIXES THE ERROR **
        // It allows users to read/write to the chatHistory of a topic they own.
        match /chatHistory/{messageId} {
          allow read, write: if (request.auth != null && get(/databases/$(database)/documents/analyses/$(analysisId)).data.userId == request.auth.uid) || isAdmin();
        }
      }
    }
    
    // Rules for public lead-generation data
    match /leads/{leadId} {
        allow create: if true;
        allow read, update, delete: if isAdmin();
    }
  }
}